name: Build and push container image 

on:
  push:
    tags:
      - '*'

jobs:
  build-and-push:
    name: Build and push container image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token

    steps:
      - uses: actions/checkout@v4

      - name: Docker meta
        # https://github.com/docker/metadata-action
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            yteraoka/test-http-server
            ghcr.io/yteraoka/test-http-server
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Install cosign
        # https://github.com/sigstore/cosign-installer
        uses: sigstore/cosign-installer@v3.4.0
        with:
          cosign-release: 'v2.2.2'

      - name: Check cosign install
        run: cosign version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        # https://github.com/docker/setup-buildx-action
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        # https://github.com/docker/login-action
        uses: docker/login-action@v3
        with:
          username: yteraoka
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        # https://github.com/docker/login-action
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        # https://github.com/docker/build-push-action
        uses: docker/build-push-action@v6
        id: build-and-push
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-crom: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest expect on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is pubic to avoid leaking data. If you would like to publish
      # transparency data even for private images, pass --force to cosign bloe.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore commuity Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
